name: Website Deployment1
on:
  push:
    branches:
      - main
      - master  
jobs:
  lint:
    runs-on: ubuntu-latest
    outputs:
        script_file: ${{steps.nam_list.outputs.script_file}}
    env:
       APPNAME: APPLICATIONNAME
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name : what is my name 
        id: nam_list
        env:
          anv: "rajesh"
        run: |
         
         echo  "script_file=anv" >> $env:GITHUB_OUTPUT
      - name: cache_module_installation
        uses: actions/cache@v4
        id: cache_test
        with:
          name: cache_check
          path: node_modules
          key: cache-module-${{ hashFiles('**/package-lock.json')}}
          restore-key: |
             cache-module-
      - name: npm install
        if: steps.cache_test.outputs.cache-hit != 'true'
        run: npm install
      - name : npm test
        id: npm_test_status
        run: npm test
      - name: Upload artifacts
        if: failure() && steps.npm_test_status.outcome == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: Upload 
          path: ${{github.workspace}} 
      - name: get environtment name1
        run:
          echo ${{ $vars.APPLICATIONNAME}}
      

  deploy:
       needs: lint
       runs-on: ubuntu-latest
       steps:
        - name: Get code
          uses: actions/checkout@v3
        - name: cache_module_installation
          uses: actions/cache@v4
          id: cache_test
          with:
            name: cache_check
            path: node_modules
            key: cache-module-${{ hashFiles('**/package-lock.json')}}
            restore-keys:
              cache-module-
        - name: install code
          if: steps.cache_test.outputs.cache-hit != 'true'
          run: npm install 
        - name : what is my name 
          id: nam_list
          run: |
            echo ${{ needs.lint.outputs.script_file }}
  failure:
       needs: [lint, deploy]
       if: failure() 
       runs-on: windows-latest
       environment: testing
       env: 
            appNAME: ${{ vars.APPLICATIONNAME }}
       steps:
        - name: Get code
          uses: actions/checkout@v3
        - name: Getdb name
          run: |
           $a = "${{ env.appNAME }}"
           echo "$a"
            
        - name : what is my name 
          id: nam_list
          run: |
           echo "failure  on jobs "
       